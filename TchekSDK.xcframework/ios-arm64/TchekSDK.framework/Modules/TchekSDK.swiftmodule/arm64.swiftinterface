// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TchekSDK
import AVFoundation
import CoreMotion
import CryptoKit
import Foundation
import Swift
@_exported import TchekSDK
import UIKit
import _Concurrency
public struct TchekReport : Swift.Equatable {
  public var date: Foundation.Date
  public let dateFirstPicture: Foundation.Date
  public var clientLastName: Swift.String?
  public var clientFirstName: Swift.String?
  public var clientMail: Swift.String?
  public var clientPhone: Swift.String?
  public var personInCharge: Swift.String?
  public var signatorySignatureName: Swift.String?
  public var companySignatureName: Swift.String?
  public var signatorySignatureUrl: Swift.String?
  public var companySignatureUrl: Swift.String?
  public static func == (a: TchekSDK.TchekReport, b: TchekSDK.TchekReport) -> Swift.Bool
}
public struct TchekScan {
  public let id: Swift.String
  public let numberDamage: Swift.Int
  public let detectionFinished: Swift.Bool
  public let inspected: Swift.Bool
  public let vehicle: TchekSDK.TchekVehicle
  public let damagesAuto: [TchekSDK.TchekDamage]
  public let damagesNotAuto: [TchekSDK.TchekDamage]
  public let imagesShootInspect: [TchekSDK.TchekImage]
  public let imagesExternal: [TchekSDK.TchekImage]
  public let report: TchekSDK.TchekReport?
  public let repairCosts: [TchekSDK.TchekRepairCost]
}
public protocol TchekShootInspectDelegate {
  func onDetectionEnd(tchekScan: TchekSDK.TchekScan)
}
public class TchekShootInspectBuilder {
  public init(delegate: TchekSDK.TchekShootInspectDelegate, ui: ((TchekSDK.TchekShootInspectBuilder) -> Swift.Void)? = nil)
  public var thumbBg: UIKit.UIColor
  public var thumbBorder: UIKit.UIColor
  public var thumbBorderBadImage: UIKit.UIColor
  public var thumbBorderGoodImage: UIKit.UIColor
  public var thumbDot: UIKit.UIColor
  public var thumbBorderThickness: CoreGraphics.CGFloat {
    get
    set
  }
  public var thumbCorner: CoreGraphics.CGFloat
  public var btnTuto: UIKit.UIColor
  public var btnTutoText: UIKit.UIColor
  public var tutoPageIndicatorDot: UIKit.UIColor
  public var tutoPageIndicatorDotSelected: UIKit.UIColor
  public var carOverlayGuide: UIKit.UIColor
  public var btnRetake: UIKit.UIColor
  public var btnRetakeText: UIKit.UIColor
  public var previewBg: UIKit.UIColor
  public var endBg: UIKit.UIColor
  public var endNavBarBg: UIKit.UIColor
  public var endNavBarText: UIKit.UIColor
  public var endText: UIKit.UIColor
  public var btnEndNext: UIKit.UIColor
  public var btnEndNextText: UIKit.UIColor
  @objc deinit
}
public struct TchekVehicle : Swift.Equatable {
  public let id: Swift.String
  public var immat: Swift.String?
  public var brand: Swift.String?
  public var model: Swift.String?
  public var vin: Swift.String?
  public var color: Swift.String?
  public static func == (a: TchekSDK.TchekVehicle, b: TchekSDK.TchekVehicle) -> Swift.Bool
}
@_hasMissingDesignatedInitializers public class TchekSdk {
  public static func configure(key: Swift.String, builder: TchekSDK.TchekBuilder)
  public static func shootInspect(builder: TchekSDK.TchekShootInspectBuilder) -> UIKit.UIViewController
  public static func shootInspectEnd(tchekId: Swift.String, builder: TchekSDK.TchekShootInspectBuilder) -> UIKit.UIViewController
  public static func fastTrack(builder: TchekSDK.TchekFastTrackBuilder) -> UIKit.UIViewController
  public static func report(builder: TchekSDK.TchekReportBuilder) -> UIKit.UIViewController
  public static func deleteTchek(tchekId: Swift.String, onFailure: @escaping () -> Swift.Void, onSuccess: @escaping () -> Swift.Void)
  @objc deinit
}
public struct TchekImage {
  public let id: Swift.String
  public let tchekId: Swift.String
  public let createdAt: Foundation.Date
  public let url: Swift.String
  public let width: Swift.Int
  public let height: Swift.Int
  public let metadata: TchekSDK.TchekImageMetadata?
}
public struct TchekImageMetadata {
  public let angle: Swift.Int
}
public struct TchekDamage {
  public let id: Swift.String
  public let type: Swift.String?
  public let severity: Swift.String?
  public var isDeleted: Swift.Bool
  public let location: Swift.String?
  public let svgLocation: Swift.Int?
  public let svgLocationArray: Swift.Array<Swift.Int>?
  public let isAuto: Swift.Bool
  public let listRoi: [TchekSDK.TchekRoi]
  public let bestRoi: TchekSDK.TchekRoi
}
public class TchekBuilder {
  public init(ui: ((TchekSDK.TchekBuilder) -> Swift.Void))
  public var alertButtonText: UIKit.UIColor
  public var accentColor: UIKit.UIColor
  @objc deinit
}
public struct TchekRepairCost {
  public let cost: Swift.Float
}
public protocol TchekFastTrackDelegate {
  func onFastTrackEnd(tchekScan: TchekSDK.TchekScan)
}
public class TchekFastTrackBuilder {
  public init(tchekId: Swift.String, delegate: TchekSDK.TchekFastTrackDelegate, ui: ((TchekSDK.TchekFastTrackBuilder) -> Swift.Void)? = nil)
  public var navBarBg: UIKit.UIColor
  public var navBarText: UIKit.UIColor
  public var fastTrackBg: UIKit.UIColor
  public var damagesListBg: UIKit.UIColor
  public var cardBg: UIKit.UIColor
  public var fastTrackText: UIKit.UIColor
  public var fastTrackPhotoAngle: UIKit.UIColor
  public var fastTrackPhotoAngleText: UIKit.UIColor
  public var damagesListText: UIKit.UIColor
  public var damageCellBorder: UIKit.UIColor
  public var damageCellText: UIKit.UIColor
  public var vehiclePatternStroke: UIKit.UIColor
  public var vehiclePatternDamageFill: UIKit.UIColor
  public var vehiclePatternDamageStoke: UIKit.UIColor
  public var btnAddExtraDamage: UIKit.UIColor
  public var btnAddExtraDamageText: UIKit.UIColor
  public var btnCreateReport: UIKit.UIColor
  public var btnCreateReportText: UIKit.UIColor
  public var btnValidateExtraDamage: UIKit.UIColor
  public var btnValidateExtraDamageText: UIKit.UIColor
  public var btnDeleteExtraDamage: UIKit.UIColor
  public var btnDeleteExtraDamageText: UIKit.UIColor
  @objc deinit
}
public protocol TchekReportDelegate {
  func onReportUpdate(tchekScan: TchekSDK.TchekScan)
}
public class TchekReportBuilder {
  public init(tchekId: Swift.String, delegate: TchekSDK.TchekReportDelegate, ui: ((TchekSDK.TchekReportBuilder) -> Swift.Void)? = nil)
  public var bg: UIKit.UIColor
  public var navBarBg: UIKit.UIColor
  public var navBarText: UIKit.UIColor
  public var reportText: UIKit.UIColor
  public var btnPrevText: UIKit.UIColor
  public var btnPrev: UIKit.UIColor
  public var btnNextText: UIKit.UIColor
  public var btnNext: UIKit.UIColor
  public var pagingBg: UIKit.UIColor
  public var pagingText: UIKit.UIColor
  public var pagingTextSelected: UIKit.UIColor
  public var pagingIndicator: UIKit.UIColor
  public var textFieldPlaceholderText: UIKit.UIColor
  public var textFieldPlaceholderTextSelected: UIKit.UIColor
  public var textFieldUnderline: UIKit.UIColor
  public var textFieldUnderlineSelected: UIKit.UIColor
  public var textFieldText: UIKit.UIColor
  public var btnValidateSignature: UIKit.UIColor
  public var btnValidateSignatureText: UIKit.UIColor
  public var damageCellBorder: UIKit.UIColor
  public var damageCellText: UIKit.UIColor
  public var vehiclePatternStroke: UIKit.UIColor
  public var vehiclePatternDamageFill: UIKit.UIColor
  public var vehiclePatternDamageStoke: UIKit.UIColor
  public var repairCostCellCostBg: UIKit.UIColor
  public var repairCostCellCostText: UIKit.UIColor
  public var repairCostCellText: UIKit.UIColor
  public var repairCostCellCircleDamageCountBg: UIKit.UIColor
  public var repairCostCellCircleDamageCountText: UIKit.UIColor
  public var extraDamageBg: UIKit.UIColor
  public var btnValidateExtraDamage: UIKit.UIColor
  public var btnValidateExtraDamageText: UIKit.UIColor
  public var btnDeleteExtraDamage: UIKit.UIColor
  public var btnDeleteExtraDamageText: UIKit.UIColor
  @objc deinit
}
public struct UIImageViewAlignmentMask : Swift.OptionSet {
  public let rawValue: Swift.Int
  public init(rawValue: Swift.Int)
  public static let center: TchekSDK.UIImageViewAlignmentMask
  public static let left: TchekSDK.UIImageViewAlignmentMask
  public static let right: TchekSDK.UIImageViewAlignmentMask
  public static let top: TchekSDK.UIImageViewAlignmentMask
  public static let bottom: TchekSDK.UIImageViewAlignmentMask
  public static let topLeft: TchekSDK.UIImageViewAlignmentMask
  public static let topRight: TchekSDK.UIImageViewAlignmentMask
  public static let bottomLeft: TchekSDK.UIImageViewAlignmentMask
  public static let bottomRight: TchekSDK.UIImageViewAlignmentMask
  public typealias ArrayLiteralElement = TchekSDK.UIImageViewAlignmentMask
  public typealias Element = TchekSDK.UIImageViewAlignmentMask
  public typealias RawValue = Swift.Int
}
@objc @_inheritsConvenienceInitializers @IBDesignable @_Concurrency.MainActor(unsafe) open class UIImageViewAligned : UIKit.UIImageView {
  @_Concurrency.MainActor(unsafe) open var alignment: TchekSDK.UIImageViewAlignmentMask {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var image: UIKit.UIImage? {
    @_Concurrency.MainActor(unsafe) @objc get
    @_Concurrency.MainActor(unsafe) @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var highlightedImage: UIKit.UIImage? {
    @_Concurrency.MainActor(unsafe) @objc get
    @_Concurrency.MainActor(unsafe) @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var alignTop: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var alignLeft: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var alignRight: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) open var alignBottom: Swift.Bool {
    @objc get
    @objc set
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var isHighlighted: Swift.Bool {
    @_Concurrency.MainActor(unsafe) @objc get
    @_Concurrency.MainActor(unsafe) @objc set
  }
  @_Concurrency.MainActor(unsafe) public var realImageView: UIKit.UIImageView? {
    get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(image: UIKit.UIImage?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(image: UIKit.UIImage?, highlightedImage: UIKit.UIImage?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func layoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func didMoveToSuperview()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func didMoveToWindow()
  @objc deinit
}
public struct TchekRoi {
  public let id: Swift.String
  public let centerX: Swift.Float
  public let centerY: Swift.Float
  public let width: Swift.Float
  public let height: Swift.Float
  public let image: TchekSDK.TchekImage
}
