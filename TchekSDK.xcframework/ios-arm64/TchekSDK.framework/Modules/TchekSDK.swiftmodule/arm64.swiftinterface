// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TchekSDK
import AVFoundation
import CoreMotion
import Foundation
import Swift
@_exported import TchekSDK
import UIKit
import _Concurrency
public struct TchekReport : Swift.Codable, Swift.Equatable {
  public var date: Foundation.Date
  public var dateFirstPicture: Foundation.Date
  public var clientLastName: Swift.String?
  public var clientFirstName: Swift.String?
  public var clientMail: Swift.String?
  public var clientPhone: Swift.String?
  public var personInCharge: Swift.String?
  public static func == (a: TchekSDK.TchekReport, b: TchekSDK.TchekReport) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct Tchek {
  public let id: Swift.String
  public let numberDamage: Swift.Int
  public let detectionFinished: Swift.Bool
  public let vehicle: TchekSDK.TchekVehicle
  public let damagesAuto: [TchekSDK.TchekDamage]
  public let damagesNotAuto: [TchekSDK.TchekDamage]
  public let imagesShootInspect: [TchekSDK.TchekImage]
  public let report: TchekSDK.TchekReport?
}
public protocol TchekShootInspectDelegate {
  func onDetectionEnd(tchekId: Swift.String)
}
public class TchekShootInspectBuilder {
  public init(delegate: TchekSDK.TchekShootInspectDelegate, ui: ((TchekSDK.TchekShootInspectBuilder) -> Swift.Void)? = nil)
  public var thumbBg: UIKit.UIColor
  public var thumbBorder: UIKit.UIColor
  public var thumbBorderBadImage: UIKit.UIColor
  public var thumbBorderGoodImage: UIKit.UIColor
  public var thumbDot: UIKit.UIColor
  public var thumbBorderThickness: CoreGraphics.CGFloat {
    get
    set
  }
  public var thumbCorner: CoreGraphics.CGFloat
  public var btnTuto: UIKit.UIColor
  public var btnTutoText: UIKit.UIColor
  public var btnRetake: UIKit.UIColor
  public var btnRetakeText: UIKit.UIColor
  public var previewBg: UIKit.UIColor
  public var btnEndNext: UIKit.UIColor
  public var btnEndNextText: UIKit.UIColor
  @objc deinit
}
public struct TchekVehicle : Swift.Encodable, Swift.Equatable {
  public let id: Swift.String
  public var immat: Swift.String?
  public var brand: Swift.String?
  public var model: Swift.String?
  public var vin: Swift.String?
  public var color: Swift.String?
  public static func == (a: TchekSDK.TchekVehicle, b: TchekSDK.TchekVehicle) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
}
@_hasMissingDesignatedInitializers public class TchekSdk {
  public static func configure(key: Swift.String, builder: TchekSDK.TchekBuilder)
  public static func shootInspect(builder: TchekSDK.TchekShootInspectBuilder) -> UIKit.UIViewController
  public static func fastTrack(builder: TchekSDK.TchekFastTrackBuilder) -> UIKit.UIViewController
  public static func report(builder: TchekSDK.TchekReportBuilder) -> UIKit.UIViewController
  @objc deinit
}
public struct TchekImage {
  public let id: Swift.String
  public let createdAt: Foundation.Date
  public let url: Swift.String
  public let width: Swift.Int
  public let height: Swift.Int
  public let metadata: TchekSDK.TchekImageMetadata?
}
public struct TchekImageMetadata {
  public let angle: Swift.Int
}
public struct TchekDamage {
  public let id: Swift.String
  public let type: Swift.String?
  public let severityDamage: Swift.String?
  public var isDeleted: Swift.Bool
  public let location: Swift.String?
  public let svgLocation: Swift.Int?
  public let svgLocationArray: Swift.Array<Swift.Int>?
  public let isAuto: Swift.Bool
  public let listRoi: [TchekSDK.TchekRoi]
  public let bestRoi: TchekSDK.TchekRoi
}
public class TchekBuilder {
  public init(ui: ((TchekSDK.TchekBuilder) -> Swift.Void))
  public var alertButtonText: UIKit.UIColor
  public var accentColor: UIKit.UIColor {
    get
    set
  }
  public var pageIndicatorDot: UIKit.UIColor
  public var pageIndicatorDotSelected: UIKit.UIColor
  @objc deinit
}
public protocol TchekFastTrackDelegate {
  func onFastTrackEnd(tchek: TchekSDK.Tchek)
}
public class TchekFastTrackBuilder {
  public init(tchekId: Swift.String, delegate: TchekSDK.TchekFastTrackDelegate, ui: ((TchekSDK.TchekFastTrackBuilder) -> Swift.Void)? = nil)
  public var btnAddExtraDamage: UIKit.UIColor
  public var btnAddExtraDamageText: UIKit.UIColor
  public var btnCreateReport: UIKit.UIColor
  public var btnCreateReportText: UIKit.UIColor
  @objc deinit
}
public protocol TchekReportDelegate {
  func onReportUpdate(tchek: TchekSDK.Tchek)
}
public class TchekReportBuilder {
  public init(tchekId: Swift.String, delegate: TchekSDK.TchekReportDelegate, ui: ((TchekSDK.TchekReportBuilder) -> Swift.Void)? = nil)
  public var btnReportPrevTextColor: UIKit.UIColor
  public var btnReportPrevColor: UIKit.UIColor
  public var btnReportNextTextColor: UIKit.UIColor
  public var btnReportNextColor: UIKit.UIColor
  public var reportPagingBg: UIKit.UIColor
  public var reportPagingText: UIKit.UIColor
  public var reportPagingTextSelected: UIKit.UIColor
  public var reportPagingIndicator: UIKit.UIColor
  @objc deinit
}
public struct TchekRoi {
  public let id: Swift.String
  public let centerX: Swift.Float
  public let centerY: Swift.Float
  public let width: Swift.Float
  public let height: Swift.Float
  public let image: TchekSDK.TchekImage
}
